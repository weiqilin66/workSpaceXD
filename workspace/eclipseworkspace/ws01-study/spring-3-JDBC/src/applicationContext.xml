<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 导入配置文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
<!-- 
DriverManagerDataSource
没有实现连接池化连接的机制，每次调用getConnection()获取新连接时，
只是简单地创建一个新的连接。所以，一般这种方式常用于开发时测试，不用于生产
mysql 8.0以上需要配置url  serverTimezone=UTC
 -->	
<!-- <bean id="dataSource"
    class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="com.mysql.jdbc.Driver">
    </property>
    <property name="url" value="jdbc:mysql://localhost:3306/spring4?serverTimezone=UTC" />
    <property name="username" value="root"></property>
    <property name="password" value="root"></property>
	
</bean> -->

<!-- 
	dbcp连接池配置
 -->
 <!-- 
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close">设置为close使Spring容器关闭同时数据源能够正常关闭，以免造成连接泄露 
    <property name="driverClassName" value="com.mysql.jdbc.Driver" />
    <property name="url" value="jdbc:mysql://localhost:3307/lucene" />
    <property name="username" value="root" />
    <property name="password" value="guo941102" />
    <property name="defaultReadOnly" value="false" />设置为只读状态，配置读写分离时，读库可以设置为true
   		 在连接池创建后，会初始化并维护一定数量的数据库安连接，当请求过多时，数据库会动态增加连接数，
    	当请求过少时，连接池会减少连接数至一个最小空闲值
    <property name="initialSize" value="5" />在启动连接池初始创建的数据库连接，默认为0
    <property name="maxActive" value="15" />设置数据库同一时间的最大活跃连接默认为8，负数表示不闲置
    <property name="maxIdle" value="10"/>在连接池空闲时的最大连接数，超过的会被释放，默认为8，负数表示不闲置
    <property name="minIdle" value="2" />空闲时的最小连接数，低于这个数量会创建新连接，默认为0
    <property name="maxWait" value="10000" />连接被用完时等待归还的最大等待时间，单位毫秒，超出时间抛异常，默认为无限等待

</bean> -->



	<!-- 配置c3p0数据源 
		destory-method设置为 close使Spring容器关闭同时数据源能够正常关闭，以免造成连接泄露
		默认的 单例模式scope=sigleton,初始化就加载,且只有一个实例
	-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>

	</bean>
	<!-- 配置spring的jdbctmplate -->
	<bean id="jdbcTmplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 配置  该对象可以使用具名参数,且没有构造对象必须为其构造器指定参数-->
	<bean id="namedParmeterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource"></constructor-arg>
		
	</bean>
</beans>
